//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public CatInteractionTypeAddedListenerComponent CatInteractionTypeAddedListener { get { return (CatInteractionTypeAddedListenerComponent)GetComponent(GameComponentsLookup.CatInteractionTypeAddedListener); } }
	public bool HasCatInteractionTypeAddedListener { get { return HasComponent(GameComponentsLookup.CatInteractionTypeAddedListener); } }

	public void AddCatInteractionTypeAddedListener(System.Collections.Generic.List<ICatInteractionTypeAddedListener> newValue)
	{
		var index = GameComponentsLookup.CatInteractionTypeAddedListener;
		var component = (CatInteractionTypeAddedListenerComponent)CreateComponent(index, typeof(CatInteractionTypeAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceCatInteractionTypeAddedListener(System.Collections.Generic.List<ICatInteractionTypeAddedListener> newValue)
	{
		var index = GameComponentsLookup.CatInteractionTypeAddedListener;
		var component = (CatInteractionTypeAddedListenerComponent)CreateComponent(index, typeof(CatInteractionTypeAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyCatInteractionTypeAddedListenerTo(CatInteractionTypeAddedListenerComponent copyComponent)
	{
		var index = GameComponentsLookup.CatInteractionTypeAddedListener;
		var component = (CatInteractionTypeAddedListenerComponent)CreateComponent(index, typeof(CatInteractionTypeAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveCatInteractionTypeAddedListener()
	{
		RemoveComponent(GameComponentsLookup.CatInteractionTypeAddedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : ICatInteractionTypeAddedListenerEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherCatInteractionTypeAddedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> CatInteractionTypeAddedListener
	{
		get
		{
			if (_matcherCatInteractionTypeAddedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.CatInteractionTypeAddedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherCatInteractionTypeAddedListener = matcher;
			}

			return _matcherCatInteractionTypeAddedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public void AddCatInteractionTypeAddedListener(ICatInteractionTypeAddedListener value)
	{
		var listeners = HasCatInteractionTypeAddedListener
			? CatInteractionTypeAddedListener.value
			: new System.Collections.Generic.List<ICatInteractionTypeAddedListener>();
		listeners.Add(value);
		ReplaceCatInteractionTypeAddedListener(listeners);
	}

	public void RemoveCatInteractionTypeAddedListener(ICatInteractionTypeAddedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = CatInteractionTypeAddedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemoveCatInteractionTypeAddedListener();
		}
		else
		{
			ReplaceCatInteractionTypeAddedListener(listeners);
		}
	}
}
